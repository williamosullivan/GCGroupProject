@model IEnumerable<GCGroupProject.viewModels.IngredientAmount>

@{
    ViewBag.Title = "Add or Drop Ingredients";
}
<h2>Add or Drop Ingredients</h2>
<link rel="stylesheet" type="text/css" href="~/Content/style.css">
Select Ingredient: @Html.DropDownList("IngredientList", (IEnumerable<SelectListItem>)ViewBag.SelectListIngredient)
Select Amount: @Html.TextBox("Amount", "")
@Html.ActionLink("Add", "EditIngredientsView", "IngredientList", "Amount", new { style = "color:lawngreen" })
<table class="table table-responsive">

    <tr>
        <th><u>Name</u></th>
        <th><u>Amount</u></th>

    </tr>
    @foreach (var i in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(x => i.IngredientName)
            </td>
            <td>
                @Html.DisplayFor(x => i.Amount)
            </td>
        </tr>
    }
</table>




@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>RecipeIngredient</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IngredientID)

            @Html.HiddenFor(model => model.RecipeID)

            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
